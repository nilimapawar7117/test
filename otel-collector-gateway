# Copyright The OpenTelemetry Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config.yaml: |
    receivers:
	  # Make sure to add the otlp receiver.
      # This will open up the receiver on port 4317
    jaeger:
	    protocols:
		  grpc:
		    endpoint: "jaeger-all-in-one.otel-collector.svc.cluster.local:14250"
	  otlp:
        protocols:
		  grpc:
		    endpoint: "0.0.0.0:4317"
          http:
		    endpoint: "0.0.0.0:4318"
		processors:
          batch:
	      memory_limiter:
		    # 80% of maximum memory up to 2G
			limit_mib: 400
			# 25% of limit up to 2G
			spike_limit_mib: 100
			check_interval: 5s
		extensions:
		  health_check:
            endpoint: 0.0.0.0:13133
		  pprof:
		    endpoint: 0.0.0.0:1777
		  zpages:
		    endpoint: 0.0.0.0:55679
		exporters:
		  otlp:
		    endpoint: "otel-collector.otel-collector.svc.cluster.local:4317"
		    tls:
			  insecure: true
			sending_queue:
	          num_consumers: 4
			  queue_size: 100
			retry_on_failure:
			  enabled: true
		  jaeger:
  			endpoint: "jaeger-all-in-one.otel-collector.svc.cluster.local:14250"
  			insecure: true
  			process:
  			  service_name: "asset-2.0"
		  prometheusremotewrite:
  			endpoint: 'http://promethues-server.grafana.svc.cluster.local:9090/write'
  			logging:
  			  loglevel: debug
  			  sampling_initial: 1
  			  sampling_thereafter: 1
			file:
			  path: ./otelcol_data.log
		service:
		  extensions: [health_check, pprof, zpages]
		  pipelines:
		  traces:
			receivers: [otlp]
			processors: []
			exporters: [jaeger]
		  logs:
			receivers: [otlp]
			processors: [batch]
			exporters: [logging]
		  metrics:
			receivers: [otlp]
			processors: [batch]
			exporters: [prometheusremotewrite, logging]	  
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
	- name: otlp # Default endpoint for otlp receiver.
	  port: 4317
	  protocol: TCP
	  targetPort: 4317
	- name: http # Default endpoint for otlp receiver.
	  port: 4318
	  protocol: TCP
	  targetPort: 4318
	- name: prometheus # Default endpoint for otlp receiver.
	  port: 9464
	  protocol: TCP
	  targetPort: 9464
	- name: metricendpoint # Default endpoint for otlp receiver.
 	  port: 8888
	  protocol: TCP
	  targetPort: 8888
	- name: healthcheck # Default endpoint for otlp receiver.
	  port: 13133
	  protocol: TCP
	  targetPort: 13133
	- name: zpages # Default endpoint for otlp receiver.
	  port: 55679
	  protocol: TCP
	  targetPort: 55679
  selector:
    component: otel-collector
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  replicas: 1
  template:
  metadata:
    labels:
      app: opentelemetry
      component: otel-collector
  spec:
    containers:
	  - name: otel-collector
		image: otel/opentelemetry-collector:0.89.0
		volumeMounts:
		  - name: config-volume
			mountPath: /etc/otel
	volumes:
	  - name: config-volume
		configMap:
		  name: otel-collector-conf
